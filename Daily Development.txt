#日常开发流程

# 切换到 dev 分支
git checkout dev

# 拉取远程 dev 的最新代码
git pull origin dev

# 创建功能分支
git checkout -b feature/功能A

# 开发/测试中......

# 在 feature 分支开发时定期执行
git fetch origin
git rebase origin/dev
echo "变基失败，群里联系，并手动处理/使用unity官方工具UnityYAMLMerge处理冲突后执行 git rebase --continue";

...

# 新功能开发完成！

# 开发完成后提交
git add .
git commit -m "feat: 实现功能A"
git push -u origin feature/功能A

# 合并 feature/功能A 到 dev
git checkout dev
git pull origin dev --rebase  # 将本地未推送的提交变基到远程最新状态

# 若产生冲突，群里联系，并手动处理/使用unity官方工具UnityYAMLMerge处理冲突
...

git merge --no-ff feature/功能A  # 生成合并节点

# 检查无误后，推送至远程仓库
git push origin dev

# 分支清理
git branch -d feature/功能A
git push origin --delete feature/功能A

